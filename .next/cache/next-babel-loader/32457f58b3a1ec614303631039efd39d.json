{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/Layout\";\nimport { withRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch';\nimport clientConfig from '../clientConfig';\nvar Product = withRouter(function (props) {\n  var product = props.product;\n  return __jsx(Layout, null, product ? __jsx(\"div\", {\n    className: \"woo-next-single\"\n  }, __jsx(\"div\", {\n    className: \"woo-next-single__product card bg-light mb-3 p-5\"\n  }, __jsx(\"div\", {\n    className: \"card-header\"\n  }, product.name), __jsx(\"div\", {\n    className: \"card-body\"\n  }, __jsx(\"h4\", {\n    className: \"card-title\"\n  }, product.name), __jsx(\"p\", {\n    dangerouslySetInnerHTML: {\n      __html: product.description\n    },\n    className: \"card-text\"\n  }), __jsx(AddToCartButton, {\n    product: product\n  })))) : '');\n});\n\nProduct.getInitialProps = function _callee() {\n  var res, productsData;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"\".concat(clientConfig.siteUrl, \"/getProducts\")));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          productsData = _context.sent;\n          return _context.abrupt(\"return\", {\n            product: productsData\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Product;","map":{"version":3,"sources":["C:/Users/asamant/Desktop/mark/app/woonext/pages/product.js"],"names":["Layout","withRouter","fetch","clientConfig","Product","props","product","name","__html","description","getInitialProps","siteUrl","res","json","productsData"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AAEA,IAAMC,OAAO,GAAGH,UAAU,CAAE,UAAAI,KAAK,EAAI;AAAA,MAE5BC,OAF4B,GAEhBD,KAFgB,CAE5BC,OAF4B;AAIpC,SAEE,MAAC,MAAD,QACGA,OAAO,GACR;AAAK,IAAA,SAAS,EAAC;AAAf,KACC;AAAK,IAAA,SAAS,EAAC;AAAf,KACC;AAAK,IAAA,SAAS,EAAC;AAAf,KAA+BA,OAAO,CAACC,IAAvC,CADD,EAEC;AAAK,IAAA,SAAS,EAAC;AAAf,KACC;AAAI,IAAA,SAAS,EAAC;AAAd,KAA6BD,OAAO,CAACC,IAArC,CADD,EAGC;AACC,IAAA,uBAAuB,EAAG;AACzBC,MAAAA,MAAM,EAAEF,OAAO,CAACG;AADS,KAD3B;AAIC,IAAA,SAAS,EAAC;AAJX,IAHD,EASC,MAAC,eAAD;AAAiB,IAAA,OAAO,EAAGH;AAA3B,IATD,CAFD,CADD,CADQ,GAkBL,EAnBL,CAFF;AAyBA,CA7ByB,CAA1B;;AA+BAF,OAAO,CAACM,eAAR,GAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAIPR,KAAK,WAAKC,YAAY,CAACQ,OAAlB,kBAJE;;AAAA;AAInBC,UAAAA,GAJmB;AAAA;AAAA,2CAKEA,GAAG,CAACC,IAAJ,EALF;;AAAA;AAKnBC,UAAAA,YALmB;AAAA,2CAOlB;AACNR,YAAAA,OAAO,EAAEQ;AADH,WAPkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B;;AAcA,eAAeV,OAAf","sourcesContent":["import Layout from \"../components/Layout\";\nimport { withRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch';\nimport clientConfig from '../clientConfig';\n\nconst Product = withRouter( props => {\n\n\tconst { product } = props;\n\n\treturn (\n\n\t\t\t<Layout>\n\t\t\t\t{ product ? (\n\t\t\t\t\t<div className=\"woo-next-single\">\n\t\t\t\t\t\t<div className=\"woo-next-single__product card bg-light mb-3 p-5\">\n\t\t\t\t\t\t\t<div className=\"card-header\">{ product.name }</div>\n\t\t\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t\t\t<h4 className=\"card-title\">{ product.name }</h4>\n\t\t\t\t\t\t\t\t{/* <img src={ product.image.sourceUrl } alt=\"Product Image\" width=\"200\" srcSet={ product.image.srcSet }/> */}\n\t\t\t\t\t\t\t\t<p\n\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={ {\n\t\t\t\t\t\t\t\t\t\t__html: product.description,\n\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\tclassName=\"card-text\"/>\n\n\t\t\t\t\t\t\t\t<AddToCartButton product={ product }/>\n\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t) : '' }\n\t\t\t</Layout>\n\n\t)\n});\n\nProduct.getInitialProps = async () => {\n\n\t// let { query: { slug } } = context;\n\t// const id = slug ? parseInt( slug.split( '-' ).pop() ) : context.query.id;\n\tconst res = await fetch (`${clientConfig.siteUrl}/getProducts`);\n\tconst productsData = await res.json();\n\t\n\treturn {\n\t\tproduct: productsData\n\t}\n\n};\n\n\nexport default Product;\n"]},"metadata":{},"sourceType":"module"}